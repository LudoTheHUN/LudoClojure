# LudoClojure

LudoClojure

.
To get working from zero:
Follow instruction here first
https://github.com/citizen428/ClojureX

... OR just use "lain repl"
Then...
Set up 'lain', Down load it and place it here /usr/local/bin/ , give it executable permission 

To use,  Run this:
lein test
lein uberjar
java -jar LudoClojure-1.0.0-SNAPSHOT-standalone.jar

Findings:
-main function needs to be at the end of the 
.../src/LudoClojure/core.clj   else everything breaks...

## BIG TODOs:
Tool up!
  Consider Eclipse with clojure plugin.   ...urgh, just try it.
  Have a look at Casandra?
Wrap openCL functionality further.
  DSL for openCL transformations over neuros, think openCL kernel writng, based on minimal defining statements.
  Wrap around the onloading, offloading of data into clojure (or java) datatypes.
Use Clojure better
  Break out into modules, UI shoudl live somewhere else, too much OO crud.
  Be sure you are 'doing it right'
  
Structure
  Define the program data structures.
  Make them complex to allow for growth (maps, arrays)
    Think of partially ordered sets
  Seperate out state
    Use persistant data structure where possible


## Usage

Don't use it

## License

Copyright (C) 2011 LudoTheHUN

Distributed under the Eclipse Public License, the same as Clojure.

To run do:
java -Xmx1028m -jar LudoClojure-1.0.0-SNAPSHOT-standalone.jar
Note, if using lein uberjar, files OCHAFIK2.DSA and OCHAFIK2.SF will have to be removed from 
LudoClojure-1.0.0-SNAPSHOT-standalone.jar/META-INF/
to work around a bug related to https://github.com/technomancy/leiningen/issues/31
